name: pytest

on:
  workflow_call:
    inputs:
      python-version:
        required: false
        type: string
      uv-version:
        required: false
        type: string
        default: latest
      debug-enabled:
        required: false
        type: boolean
        default: false
    secrets:
        codecov-token: 
          required: false
        ssh-private-key:
          required: false

jobs:
  pytest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ inputs.debug-enabled }}
        with:
          detached: true
      - uses: webfactory/ssh-agent@v0.9.1
        env: 
            ssh-private-key: ${{ secrets.ssh-private-key }}
        if: ${{ env.ssh-private-key != '' }}
        with:
          ssh-private-key: ${{ secrets.ssh-private-key }}
      # We support a specific Python version as arg or reading it from
      # the .python-version file
      - name: Install uv and Python
        if: ${{ inputs.python-version != '' }}
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ inputs.uv-version }}
          enable-cache: true
          cache-dependency-glob: uv.lock
          python-version: ${{ inputs.python-version }}
      - name: Install uv and Python using .python-version
        if: ${{ inputs.python-version == '' }}
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ inputs.uv-version }}
          enable-cache: true
          cache-dependency-glob: uv.lock
      # Alternative, sometimes faster due to Github caching the Python version
      # - name: "Set up Python"
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version-file: ".python-version" OR python-version: ${{ inputs.python-version }}
      - name: Install the project
        run: |
          uv sync --locked --dev --all-extras
      - name: Test with pytest
        run: |
          uv run pytest
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        env: 
            codecov-token: ${{ secrets.codecov-token }}
        if: ${{ env.codecov-token != '' }}
        with:
          token: ${{ secrets.codecov-token }}
          name: codecov-umbrella
          fail_ci_if_error: false
          verbose: true
